-- 01. QUAL FOI O TOTAL DE RECEITA NO ANO DE 1997?

DROP VIEW TOTAL_REVENUES_1997_VIEW;

CREATE VIEW TOTAL_REVENUES_1997_VIEW AS
SELECT SUM((ORDER_DETAILS.UNIT_PRICE) * ORDER_DETAILS.QUANTITY * (1.0 - ORDER_DETAILS.DISCOUNT)) AS TOTAL_REVENUES_1997
FROM ORDER_DETAILS
INNER JOIN (
SELECT ORDER_ID
FROM ORDERS
WHERE EXTRACT(YEAR
FROM ORDER_DATE) = '1997'
) AS ORD
ON
ORD.ORDER_ID = ORDER_DETAILS.ORDER_ID;

SELECT *
FROM TOTAL_REVENUES_1997_VIEW;

-- 02. FAÇA UMA ANÁLISE DE CRESCIMENTO MENSAL E O CÁLCULO DE YTD.

DROP VIEW VIEW_RECEITAS_ACUMULADAS;

CREATE VIEW VIEW_RECEITAS_ACUMULADAS AS
WITH RECEITASMENSAIS AS (
SELECT EXTRACT(YEAR
FROM ORDERS.ORDER_DATE) AS ANO, EXTRACT(MONTH
FROM ORDERS.ORDER_DATE) AS MES, SUM(ORDER_DETAILS.UNIT_PRICE * ORDER_DETAILS.QUANTITY * (1.0 - ORDER_DETAILS.DISCOUNT)) AS RECEITA_MENSAL
FROM ORDERS
INNER JOIN
ORDER_DETAILS ON
ORDERS.ORDER_ID = ORDER_DETAILS.ORDER_ID
GROUP BY
EXTRACT(YEAR
FROM ORDERS.ORDER_DATE), EXTRACT(MONTH
FROM ORDERS.ORDER_DATE)
), RECEITASACUMULADAS AS (
SELECT ANO, MES, RECEITA_MENSAL, SUM(RECEITA_MENSAL) OVER (PARTITION BY ANO
ORDER BY MES) AS RECEITA_YTD
FROM RECEITASMENSAIS
)
SELECT ANO, MES, RECEITA_MENSAL, RECEITA_MENSAL - LAG(RECEITA_MENSAL) OVER (PARTITION BY ANO
ORDER BY MES) AS DIFERENCA_MENSAL, RECEITA_YTD,(RECEITA_MENSAL - LAG(RECEITA_MENSAL) OVER (PARTITION BY ANO
ORDER BY MES)) / LAG(RECEITA_MENSAL) OVER (PARTITION BY ANO
ORDER BY MES) * 100 AS PERCENTUAL_MUDANCA_MENSAL
FROM RECEITASACUMULADAS
ORDER BY
ANO, MES;

SELECT *
FROM VIEW_RECEITAS_ACUMULADAS;

-- 03. QUAL É O VALOR TOTAL QUE CADA CLIENTE JÁ PAGOU ATÉ AGORA?

DROP VIEW VIEW_TOTAL_REVENUES_PER_CUSTOMER;

CREATE VIEW VIEW_TOTAL_REVENUES_PER_CUSTOMER AS
SELECT CUSTOMERS.COMPANY_NAME, SUM(ORDER_DETAILS.UNIT_PRICE * ORDER_DETAILS.QUANTITY * (1.0 - ORDER_DETAILS.DISCOUNT)) AS TOTAL
FROM CUSTOMERS
INNER JOIN
ORDERS ON
CUSTOMERS.CUSTOMER_ID = ORDERS.CUSTOMER_ID
INNER JOIN
ORDER_DETAILS ON
ORDER_DETAILS.ORDER_ID = ORDERS.ORDER_ID
GROUP BY
CUSTOMERS.COMPANY_NAME
ORDER BY
TOTAL DESC;

SELECT *
FROM VIEW_TOTAL_REVENUES_PER_CUSTOMER;


-- 04. SEPARE OS CLIENTES EM 5 GRUPOS DE ACORDO COM O VALOR PAGO POR CLIENTE.

DROP VIEW VIEW_TOTAL_REVENUES_PER_CUSTOMER_GROUP;

CREATE VIEW VIEW_TOTAL_REVENUES_PER_CUSTOMER_GROUP AS
SELECT CUSTOMERS.COMPANY_NAME, SUM(ORDER_DETAILS.UNIT_PRICE * ORDER_DETAILS.QUANTITY * (1.0 - ORDER_DETAILS.DISCOUNT)) AS TOTAL, NTILE(5) OVER (
ORDER BY SUM(ORDER_DETAILS.UNIT_PRICE * ORDER_DETAILS.QUANTITY * (1.0 - ORDER_DETAILS.DISCOUNT)) DESC) AS GROUP_NUMBER
FROM CUSTOMERS
INNER JOIN
ORDERS ON
CUSTOMERS.CUSTOMER_ID = ORDERS.CUSTOMER_ID
INNER JOIN
ORDER_DETAILS ON
ORDER_DETAILS.ORDER_ID = ORDERS.ORDER_ID
GROUP BY
CUSTOMERS.COMPANY_NAME
ORDER BY
TOTAL DESC;

SELECT *
FROM VIEW_TOTAL_REVENUES_PER_CUSTOMER_GROUP;

-- 05. AGORA SOMENTE OS CLIENTES QUE ESTÃO NOS GRUPOS 3, 4 E 5 PARA QUE SEJA FEITA UMA ANÁLISE DE MARKETING ESPECIAL COM ELES.

DROP VIEW CLIENTS_TO_MARKETING;

CREATE VIEW CLIENTS_TO_MARKETING AS
WITH CLIENTES_PARA_MARKETING AS (
SELECT CUSTOMERS.COMPANY_NAME, SUM(ORDER_DETAILS.UNIT_PRICE * ORDER_DETAILS.QUANTITY * (1.0 - ORDER_DETAILS.DISCOUNT)) AS TOTAL, NTILE(5) OVER (
ORDER BY SUM(ORDER_DETAILS.UNIT_PRICE * ORDER_DETAILS.QUANTITY * (1.0 - ORDER_DETAILS.DISCOUNT)) DESC) AS GROUP_NUMBER
FROM CUSTOMERS
INNER JOIN
ORDERS ON
CUSTOMERS.CUSTOMER_ID = ORDERS.CUSTOMER_ID
INNER JOIN
ORDER_DETAILS ON
ORDER_DETAILS.ORDER_ID = ORDERS.ORDER_ID
GROUP BY
CUSTOMERS.COMPANY_NAME
ORDER BY
TOTAL DESC
)
SELECT *
FROM CLIENTES_PARA_MARKETING
WHERE GROUP_NUMBER >= 3;

SELECT *
FROM CLIENTS_TO_MARKETING;


-- 06. IDENTIFICAR OS 10 PRODUTOS MAIS VENDIDOS.

DROP VIEW TOP_10_PRODUCTS;

CREATE VIEW TOP_10_PRODUCTS AS
SELECT PRODUCTS.PRODUCT_NAME, SUM(ORDER_DETAILS.UNIT_PRICE * ORDER_DETAILS.QUANTITY * (1.0 - ORDER_DETAILS.DISCOUNT)) AS SALES
FROM PRODUCTS
INNER JOIN ORDER_DETAILS ON
ORDER_DETAILS.PRODUCT_ID = PRODUCTS.PRODUCT_ID
GROUP BY PRODUCTS.PRODUCT_NAME
ORDER BY SALES DESC;

SELECT *
FROM TOP_10_PRODUCTS;


-- 07. QUAIS CLIENTES DO REINO UNIDO PAGARAM MAIS DE 1000 DÓLARES?

DROP VIEW UK_CLIENTS_WHO_PAY_MORE_THEN_1000;

CREATE VIEW UK_CLIENTS_WHO_PAY_MORE_THEN_1000 AS
SELECT CUSTOMERS.CONTACT_NAME, SUM(ORDER_DETAILS.UNIT_PRICE * ORDER_DETAILS.QUANTITY * (1.0 - ORDER_DETAILS.DISCOUNT) * 100) / 100 AS PAYMENTS
FROM CUSTOMERS
INNER JOIN ORDERS ON
ORDERS.CUSTOMER_ID = CUSTOMERS.CUSTOMER_ID
INNER JOIN ORDER_DETAILS ON
ORDER_DETAILS.ORDER_ID = ORDERS.ORDER_ID
WHERE LOWER(CUSTOMERS.COUNTRY) = 'UK'
GROUP BY CUSTOMERS.CONTACT_NAME
HAVING SUM(ORDER_DETAILS.UNIT_PRICE * ORDER_DETAILS.QUANTITY * (1.0 - ORDER_DETAILS.DISCOUNT)) > 1000;

SELECT *
FROM UK_CLIENTS_WHO_PAY_MORE_THEN_1000;
