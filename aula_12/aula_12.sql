--CRIAÇÃO DA TABELA COM UUID:

CREATE EXTENSION IF NOT EXISTS "UUID-OSSP";

CREATE TABLE PESSOAS (
ID UUID PRIMARY KEY DEFAULT UUID_GENERATE_V4(), FIRST_NAME VARCHAR(3), LAST_NAME VARCHAR(3)
);

--VERIFICAÇÃO DE ÍNDICES EXISTENTE:

SELECT TABLENAME AS "TABELA", INDEXNAME AS "ÍNDICE", INDEXDEF AS "DEFINIÇÃO DO ÍNDICE"
FROM PG_INDEXES
WHERE TABLENAME = 'PESSOAS';-- SUBSTITUA 'PESSOAS' PELO NOME DA SUA TABELA

--DROPAR A TABELA COM UUID E CRIAR UMA SERIAL:

CREATE TABLE PESSOAS (
ID SERIAL PRIMARY KEY, FIRST_NAME VARCHAR(3), LAST_NAME VARCHAR(3)
);

--INSERÇÃO DE 1 MILHÃO DE REGISTROS:

INSERT INTO PESSOAS (FIRST_NAME, LAST_NAME)
SELECT SUBSTRING(MD5(RANDOM()::TEXT), 0, 3), SUBSTRING(MD5(RANDOM()::TEXT), 0, 3)
FROM GENERATE_SERIES(1, 1000000);

--VERIFICANDO O TEMPO E BUSCANDO SOMENTE PELO ÍNDICE:

SELECT ID
FROM PESSOAS
WHERE ID = 100000;

EXPLAIN ANALYZE SELECT ID
FROM PESSOAS
WHERE ID = 100000;

--BUSCANDO SOMENTE PELO ÍNDICE, MAS OBSERVANDO OS DETALHES DA TABELA:

SELECT FIRST_NAME
FROM PESSOAS
WHERE ID = 100000;

EXPLAIN ANALYZE SELECT FIRST_NAME
FROM PESSOAS
WHERE ID = 100000;

--BUSCANDO E TRAZENDO DADOS DA TABELA DE MANEIRA EFICIENTE:

SELECT FIRST_NAME
FROM PESSOAS
WHERE FIRST_NAME = 'AA';

--BUSCANDO E TRAZENDO DADOS DA TABELA DA PIOR MANEIRA POSSÍVEL:

SELECT FIRST_NAME
FROM PESSOAS
WHERE FIRST_NAME LIKE '%A%';

--CRIANDO NOSSO ÍNDICE:

CREATE INDEX FIRST_NAME_INDEX ON
PESSOAS(FIRST_NAME);

--COMPARAÇÃO APÓS A CRIAÇÃO DO ÍNDICE:

SELECT FIRST_NAME
FROM PESSOAS
WHERE FIRST_NAME = 'AA';

--COMPARANDO AGORA COM O OPERADOR LIKE:

SELECT FIRST_NAME
FROM PESSOAS
WHERE FIRST_NAME LIKE '%AA%';

--ENTENDENDO UM POUCO MAIS DO EXPLAIN:
--CONSULTA SIMPLES:

EXPLAIN SELECT *
FROM PESSOAS;

--CONSULTA COM ORDENAÇÃO POR ID:

EXPLAIN SELECT *
FROM PESSOAS
ORDER BY ID;

--CONSULTA COM ORDENAÇÃO POR LAST_NAME:

EXPLAIN SELECT *
FROM PESSOAS
ORDER BY LAST_NAME;

--CUSTO DO ÍNDICE:

SELECT PG_SIZE_PRETTY(PG_RELATION_SIZE('FIRST_NAME_INDEX'));

SELECT PG_SIZE_PRETTY(PG_COLUMN_SIZE(FIRST_NAME)::BIGINT) AS TAMANHO_TOTAL
FROM PESSOAS;

SELECT PG_SIZE_PRETTY(SUM(PG_COLUMN_SIZE(FIRST_NAME)::BIGINT)) AS TAMANHO_TOTAL
FROM PESSOAS;